

{% liquid
  assign cc_handle = cart.attributes['cc-creator-handle']
  assign cc_creator = metaobject
%}


{% liquid
  assign eyebrowcopy = section.settings.eyebrowcopy
  assign title = section.settings.title
  assign subtitle = section.settings.subtitle
  assign stars = section.settings.stars
  assign cta_text = section.settings.cta_text
  
  if eyebrowcopy contains '['
    assign parts = eyebrowcopy | split: '['
    assign eyebrowcopy = parts[0]
    for part in parts offset: 1
      assign subparts = part | split: ']'
      assign field_name = subparts[0]
      assign field_value = cc_creator.data.value[field_name] | default: cc_creator[field_name] | default: metaobject[field_name]
      if field_value != blank
        assign eyebrowcopy = eyebrowcopy | append: field_value | append: subparts[1]
      else
        assign eyebrowcopy = eyebrowcopy | append: '[' | append: field_name | append: ']' | append: subparts[1]
      endif
    endfor
  endif
  
  if title contains '['
    assign parts = title | split: '['
    assign title = parts[0]
    for part in parts offset: 1
      assign subparts = part | split: ']'
      assign field_name = subparts[0]
      assign field_value = cc_creator.data.value[field_name] | default: cc_creator[field_name] | default: metaobject[field_name]
      if field_value != blank
        assign title = title | append: field_value | append: subparts[1]
      else
        assign title = title | append: '[' | append: field_name | append: ']' | append: subparts[1]
      endif
    endfor
  endif
  
  if subtitle contains '['
    assign parts = subtitle | split: '['
    assign subtitle = parts[0]
    for part in parts offset: 1
      assign subparts = part | split: ']'
      assign field_name = subparts[0]
      assign field_value = cc_creator.data.value[field_name] | default: cc_creator[field_name] | default: metaobject[field_name]
      if field_value != blank
        assign subtitle = subtitle | append: field_value | append: subparts[1]
      else
        assign subtitle = subtitle | append: '[' | append: field_name | append: ']' | append: subparts[1]
      endif
    endfor
  endif
  
  if stars contains '['
    assign parts = stars | split: '['
    assign stars = parts[0]
    for part in parts offset: 1
      assign subparts = part | split: ']'
      assign field_name = subparts[0]
      assign field_value = cc_creator.data.value[field_name] | default: cc_creator[field_name] | default: metaobject[field_name]
      if field_value != blank
        assign stars = stars | append: field_value | append: subparts[1]
      else
        assign stars = stars | append: '[' | append: field_name | append: ']' | append: subparts[1]
      endif
    endfor
  endif
  
  if cta_text contains '['
    assign parts = cta_text | split: '['
    assign cta_text = parts[0]
    for part in parts offset: 1
      assign subparts = part | split: ']'
      assign field_name = subparts[0]
      assign field_value = cc_creator.data.value[field_name] | default: cc_creator[field_name] | default: metaobject[field_name]
      if field_value != blank
        assign cta_text = cta_text | append: field_value | append: subparts[1]
      else
        assign cta_text = cta_text | append: '[' | append: field_name | append: ']' | append: subparts[1]
      endif
    endfor
  endif
%}

{%- comment -%} Calculate computed_text_color BEFORE CSS and HTML {%- endcomment -%}
{%- liquid
  assign computed_text_color = section.settings.textcolor
  
  if section.settings.auto_text_contrast and section.settings.background_image == blank
    assign bg_color = section.settings.background | remove: '#' | upcase
    assign hex_chars = 'ABCDEF'
    
    assign r_hex = bg_color | slice: 0, 2
    assign g_hex = bg_color | slice: 2, 2
    assign b_hex = bg_color | slice: 4, 2
    
    assign r1 = r_hex | slice: 0, 1
    assign r2 = r_hex | slice: 1, 1
    if hex_chars contains r1
      assign r1_val = hex_chars | split: '' | index: r1 | plus: 10
    else
      assign r1_val = r1 | times: 1
    endif
    if hex_chars contains r2
      assign r2_val = hex_chars | split: '' | index: r2 | plus: 10
    else
      assign r2_val = r2 | times: 1
    endif
    assign r = r1_val | times: 16 | plus: r2_val
    
    assign g1 = g_hex | slice: 0, 1
    assign g2 = g_hex | slice: 1, 1
    if hex_chars contains g1
      assign g1_val = hex_chars | split: '' | index: g1 | plus: 10
    else
      assign g1_val = g1 | times: 1
    endif
    if hex_chars contains g2
      assign g2_val = hex_chars | split: '' | index: g2 | plus: 10
    else
      assign g2_val = g2 | times: 1
    endif
    assign g = g1_val | times: 16 | plus: g2_val
    
    assign b1 = b_hex | slice: 0, 1
    assign b2 = b_hex | slice: 1, 1
    if hex_chars contains b1
      assign b1_val = hex_chars | split: '' | index: b1 | plus: 10
    else
      assign b1_val = b1 | times: 1
    endif
    if hex_chars contains b2
      assign b2_val = hex_chars | split: '' | index: b2 | plus: 10
    else
      assign b2_val = b2 | times: 1
    endif
    assign b = b1_val | times: 16 | plus: b2_val
    
    assign bg_brightness = r | times: 299 | plus: g | times: 587 | plus: b | times: 114 | divided_by: 1000
    
    if bg_brightness > 128
      assign computed_text_color = '#000000'
    else
      assign computed_text_color = '#ffffff'
    endif
  endif
-%}

<!-- Block Body -->
{%- style -%}
  {%- comment -%} Use textcolor directly if background image exists, otherwise use computed color {%- endcomment -%}
  {%- liquid
    if section.settings.background_image != blank
      assign final_text_color = section.settings.textcolor
    else
      assign final_text_color = computed_text_color
    endif
  -%}

  /*=============================
    Hero Section
  =============================*/
  #hero-section {
    display: flex;
    gap: 48px;
    min-height: 60vh;
    color: {{ final_text_color }};
    --hero-text-color: {{ final_text_color }};
    width: 100%;
    
    margin: auto;
    flex-direction: row;
    background-size: cover;
    background-position: center;
     position: relative;
  }
  
  
  {% if section.settings.carousel_type == 'social' %}
  .story__next.swiper-button-next,
  .story__prev.swiper-button-prev {
    display: none !important;
  }
  {% endif %}
  {% if section.settings.background_image != blank %}
   #hero-section::before {
    content: '';
    position: absolute;
    inset: 0;
    pointer-events: none;
    background: rgba(0, 0, 0, 0.4);
    z-index: 0;
    border-radius: inherit;
  }
  {% endif %}

  
  #hero-section > * {
    position: relative;
    z-index: 1;
  }
   {% if section.settings.background_image == blank %}
      #hero-section{
        background-color: {{ section.settings.background }};
      }
    {% endif %}
  .certified-container {
    width: 100% !important;
   }
  
    #hero-section h1,
    #hero-section h2,
    #hero-section h3,
    #hero-section h4,
    #hero-section h5,
    #hero-section h6 {
    
  }

  #hero-section p,
  #hero-section span,
  #hero-section div {
    
  }

  #hero-section button,
  #hero-section .product-cta,
  #hero-section .fallback-cta,
  #hero-section .hero-cta-button {
    
  }


  .hero-header-copy p {
    margin: 0;
  }
 .custom-section {
      width: 100%;
  }
  .hero-content.center-content {
    align-items: center !important;
    flex: auto;
    width: 100%;
    max-width: 100%;
    text-align: center !important;
    display: flex !important;
    padding-left: 0 !important;
  }



  .responsive-flex {
    display: flex;
    flex-direction: row;
  }

  #hero-image {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    max-width: 100%;
    box-sizing: border-box;
    
  }

  #image-width {
    max-width: 500px;
    max-height: 600px;
    object-fit: cover;
    object-position: center;
  }

  .hero-content {
    
    display: block;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    padding: 20px;
    padding-left: {% if total_media_count == 0 %}0{% else %}{{ section.settings.padding_left }}{% endif %}px;
    
    box-sizing: border-box;
    
  }

  .hero-header-copy {
    max-width: 750px;
    margin: 1.5vh 0 {{ section.settings.heading_margin_bottom }}px 0;
    display: block;
  }

  #star-container {
    display: flex;
    flex-direction: row;
    margin-right: 8px;
  }
  .template-creator  main#MainContent {
    padding: 0;
}
  h2.hero-header-copy.hide-on-mobile p{
    font-weight:500 !important; 
    line-height: 1.2;
  }
  h2.hero-header-copy.hide-on-desktop p{
    font-weight:500; 
  }
  
  #star-text {
    font-weight: 600;
    margin-top:0;
    padding-top: {{ section.settings.star_adjustment_spacing }}px;
    margin-bottom:0;
    line-height: 1;
  }
  
  .hero-star-icon path {
    fill: {{ final_text_color }};
  }

  /* Collab X divider color */
  .cc-divider {
    color: {{ final_text_color }};
  }

  /* Collab text colors */
  .cc-logo-text,
  .cc-creator-name {
    color: {{ final_text_color }} !important;
  }

  /* Dynamic text elements (title, subtitle, etc.) */
  .dynamic-text {
    color: {{ final_text_color }};
  }

testimonials-component {
    visibility: visible !important;
}
  #grid-container {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 10px;
    max-width: 520px;
    margin: 0;
    margin-top: 2.2vh auto;
    margin-top:20px;
  }

 

  .hide-on-mobile {
    display: flex !important;
  }

  .hide-on-desktop {
    display: none !important;
  }

  .section-padding {
    padding-top: {{ section.settings.padding_vertical }}rem;
    padding-bottom: {{ section.settings.padding_vertical }}rem;
  }

  /*=============================
    Video Slider
  =============================*/
  .unique-video-slider {
    position: relative;
    overflow-x: hidden;
    width: 100%;
  }
  {% if section.settings.background_image != blank %}
    #hero-section{
      background-image: url('{{ section.settings.background_image | image_url }}'); 
    }
  {% endif %}
   
{% if section.settings.background_image == blank %}
  .unique-video-slider::before,
  .unique-video-slider::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: 10;
    pointer-events: none;
  }

  .unique-video-slider::before {
    left: 0;
    width: 30px;
    background: linear-gradient(to right, {{ section.settings.background }}, {{ section.settings.background | color_modify: 'alpha', 0 }}) !important;
  }

  .unique-video-slider::after {
    right: 0;
    width: 100px;
    background: linear-gradient(to left, {{ section.settings.background }}, {{ section.settings.background | color_modify: 'alpha', 0 }}) !important;
  }
 {% endif %}
  .unique-video-slider .unique-testimonial__image {
    aspect-ratio: 9/14;
    width: 400px;
    overflow: hidden;
    border-radius: {{ section.settings.border_radius | at_most: 40 }}px;
    border: {{ section.settings.border_width_general }}px solid {{ final_text_color }};
    position: relative;
  }
  .story .unique-testimonial__image{
    aspect-ratio: 9/14;
    width: 400px;
    border-radius: {{ section.settings.border_radius | at_most: 40 }}px;
    border: {{ section.settings.border_width_general }}px solid {{ final_text_color }};
     overflow: hidden;
  }
  .story__pagination.swiper-pagination.swiper-pagination-bullets.swiper-pagination-horizontal {
    padding: 15px;
}

  .lazy-video-container {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .lazy-video-container img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  .unique-video-slider .media-wrapper {
    margin-right: 0;
  }

  .unique-video-slider-item {
    margin-left: 40px;
    margin-right: 0;
    flex-shrink: 0;
  }

  .unique-video-slider-list {
    display: flex;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none;
    cursor: grab;
  }

  .unique-video-slider-list.dragging {
    cursor: grabbing;
    user-select: none;
  }

  .unique-video-slider-list::-webkit-scrollbar {
    display: none;
  }

  
  .unique-video-slider-item.single-media-item {
    margin: 0 auto !important;
  }

  
  @media (max-width: 1100px) {
    .unique-video-slider-item.single-media-item {
      margin: 0 auto !important;
    }
    
    .unique-video-slider-list:has(.single-media-item) {
      justify-content: center;
    }
  }




  .cc-logo-container p{
    margin:0;
  }
    .cc-logo-image {
      width: 80px;
      height: 80px;
      border-radius: 50%;
      object-fit: cover;
      object-position: center;
    }

    .cc-creator-image {
      width: 80px;
      height: 80px;
      border-radius: 50%;
      object-fit: cover;
    }

    .cc-logo-divider {
      font-size: 35px;
      color: {{ final_text_color }};
      height: 80px;
      align-self: start;
      align-content:center;
      font-weight: 500;
    }

    .cc-logo-container {
      display: flex;
      align-items: flex-start;
      justify:start;
      gap: 24px;
      max-width:fit-content;
    }
    .cc-logo-container .dynamic-text {
        max-width: min-content;

    }
    .cc-logo {
      display: flex;
      flex-direction: column;
      align-items: center;
      max-width: 100%;
      height: auto;
      text-decoration: none;
      text-align: center;
    }
    .cc-creator {
     text-align: center;
     display: flex;
     flex-direction: column;
     align-items: center;
    }
    .cc-creator .dynamic-text {
      text-align: center;
      width: 100%;
    }
    .cc-creator-profile {
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
    }
    .cc-creator-profile .dynamic-text {
      text-align: center;
      width: 100%;
    }
   #hero-section .container {
    max-width: 750px !important;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    padding-left: 0px;
    padding-right: 0px;
    padding-top: 0px;
    padding-bottom: 0px;
  }
@media screen and (min-width: 1760px){
 #hero-section .container {
    max-width: 1024px;
    display: flex;
    align-items: center;
    justify-content: end;
}
div#hero-image {
    max-width: 1500px;
}
}
  /*=============================
    Responsive Styles
  =============================*/
  @media (max-width: 1100px) {
    .unique-video-slider .unique-testimonial__image {
      margin-left: 0;
      height: 300px;
      width: 180px;
      border-radius: {{ section.settings.border_radius | at_most: 40 }}px;
      border: {{ section.settings.border_width_general }}px solid {{ final_text_color }};
    }

    .unique-video-slider {
      margin-left: calc(-50vw + 50%);
    }

    .unique-video-slider::before {
      width: 0px;
    }

    .unique-video-slider::after {
      width: 50px;
    }

    #hero-section {
      flex-direction: column;
      height: auto;
      gap: {{ section.settings.padding_vertical }}rem;
    }
    
    
    {% if section.settings.carousel_type == 'social' %}
    .story__next.swiper-button-next,
    .story__prev.swiper-button-prev {
      display: none !important;
    }
    {% endif %}

    .hide-on-desktop {
      display: flex !important;
    }

    .hide-on-mobile {
      display: none !important;
    }

    .hero-content {
      order: 1;
      align-items: center;
      padding: 0 20px;
      text-align: center;
      display:flex;
    }

    #hero-image {
      order: -1;
      display: flex;
      align-items: center;
       justify-content: flex-start;
      min-height: 34vh;
      margin: 0;
      padding: 0;
      text-align: center;
    }

    .hero-header-copy {
      font-size: 2em;
      margin-bottom: 4vh;
      display: flex;
      flex-direction: column;
    }

    #image-width {
      width: 100%;
    }

    .responsive-flex {
      flex-direction: column;
    }

    
    .ghost-certification .bottom-section {
      align-items: center;
      gap: 12px;
      justify-content: center !important;
    }


    #grid-container {
      grid-template-columns: repeat(1, 1fr);
    }

    


    .star {
      width: 16px;
      height: 16px;
    }
    .certified-feature-section{
      align-items:center;
    }
    #hero-section .container {
    padding-left: 0px !important;
    padding-right: 0px !important;
    padding-top: 0px !important;
    padding-bottom: 0px !important;
  }
  }

  @media (max-width: 768px) {
    .certified-feature-section {
      padding: 15px;
    }

    .certified-feature-section .top-section {
      max-width: 100%;
      text-align: center;
      gap: 40px;
    }

    .certified-feature-section .images {
      justify-content: center;
      gap: 0;
    }

    .certified-feature-section .images img:not(:first-child) {
      margin-left: -8px;
    }

    .certified-feature-section .count {
      font-size: 12px;
      padding: 5px;
      background: #E6F4F1;
      color: #000;
      font-weight: bold;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-left: -5px;
      min-width: 30px;
      height: 30px;
    }

    .certified-feature-section .text-section strong {
      display: block;
    }

    .certified-feature-section .bottom-section {
      align-items: center;
      gap: 12px;
    }


    .certified-feature-section .bottom-item {
      max-width: 100%;
      gap: 5px;
      font-size: 13px;
    }

    .certified-feature-section .bottom-item img {
      width: 35px;
      height: 35px;
      object-fit: contain;
      object-position: center;
    }

    .unique-video-slider-item {
          margin-left: 20px;
      }
    .certified-feature-section .bottom-section {
        gap: var(--mobile-gap);
        gap: 12px;
        justify-content: center !important;
    }
  }

    @media screen and (max-width: 749px) {
      .cc-logo-image {
        width: 75px;
        height: 75px;
        border-radius: 50%;
        object-fit: cover;
        object-position: center;
      }

      .cc-creator-image {
        width: 75px;
        height: 75px;
      }

      .cc-logo-divider {
        height: 75px;
        align-self: start;
        display: flex;
        align-items: center;
      }

      .media-wrapper--small {
        border-radius: {{ section.settings.border_radius | at_most: 40 }}px;
        border: {{ section.settings.border_width_general }}px solid {{ section.settings.textcolor }};
      }

      .story__slide {
        border-radius: {{ section.settings.border_radius | at_most: 40 }}px;
        border: {{ section.settings.border_width_general }}px solid {{ section.settings.textcolor }};
      }
      .slider--social {
          max-width: 95% !important;
          margin: 0 auto !important;
      }
      .story__pagination.swiper-pagination.swiper-pagination-bullets.swiper-pagination-horizontal {
          right: 0;
          max-width: 90%;
          margin: 0 auto;
      }
    }

  @media (max-width: 420px) {
    .certified-feature-section {
      padding: 0;
    }
  }
{%- endstyle -%}

  {%- assign total_media_count = 0 -%}

  

  {%- assign creator_media_count = 0 -%}
  
  
  {%- for drop in metaobject.data.value['cc-creator-drops'] -%}
    {%- for product in drop['cc-creator-drop-products'] -%}
      {%- for media in product.enhancement.media -%}
        {%- if media.url contains 'assets.drops.shop' -%}
        {%- if media.mimeType contains 'video' or media.mimeType contains 'image' -%}
          {%- assign total_media_count = total_media_count | plus: 1 -%}
            {%- assign creator_media_count = creator_media_count | plus: 1 -%}
          {%- endif -%}
        {%- endif -%}
      {%- endfor -%}
      
      
      {%- for field in product -%}
        {%- assign field_value = field[1] -%}
        {%- if field_value.first -%}
          {%- for item in field_value -%}
            {%- if item.url contains 'assets.drops.shop' -%}
              {%- if item.mimeType contains 'video' or item.mimeType contains 'image' -%}
                {%- assign total_media_count = total_media_count | plus: 1 -%}
                {%- assign creator_media_count = creator_media_count | plus: 1 -%}
              {%- endif -%}
            {%- endif -%}
          {%- endfor -%}
        {%- endif -%}
    {%- endfor -%}
  {%- endfor -%}

    
    {%- for field in drop -%}
      {%- assign field_value = field[1] -%}
      {%- if field_value.first -%}
        {%- for item in field_value -%}
          {%- if item.url contains 'assets.drops.shop' -%}
            {%- if item.mimeType contains 'video' or item.mimeType contains 'image' -%}
              {%- assign total_media_count = total_media_count | plus: 1 -%}
              {%- assign creator_media_count = creator_media_count | plus: 1 -%}
            {%- endif -%}
          {%- endif -%}
        {%- endfor -%}
      {%- endif -%}
    {%- endfor -%}
  {%- endfor -%}
  
  
  {%- for field in metaobject.data.value -%}
    {%- assign field_value = field[1] -%}
    {%- if field_value.first -%}
      {%- for item in field_value -%}
        {%- if item.url contains 'assets.drops.shop' -%}
          {%- if item.mimeType contains 'video' or item.mimeType contains 'image' -%}
            {%- assign total_media_count = total_media_count | plus: 1 -%}
            {%- assign creator_media_count = creator_media_count | plus: 1 -%}
          {%- endif -%}
        {%- endif -%}
      {%- endfor -%}
    {%- endif -%}
  {%- endfor -%}

 
  {% if creator_media_count == 0 %}
    {% if section.settings.video_1 != blank %}
      {%- assign total_media_count = total_media_count | plus: 1 -%}
    {% endif %}
  {% endif %}

  <div id="hero-section" class="section-padding" data-auto-contrast="{{ section.settings.auto_text_contrast }}">
    <!-- Right/Top Panel (Now First) -->
    <div class="container" style="align-content:center;margin-top:auto;margin-bottom:auto;">
    <div class="hero-content{% if total_media_count == 0 %} center-content{% endif %}">
      
       {% if eyebrowcopy != blank %}
           
           {% assign eyebrow_bg_raw = section.settings.eyebrowbackground | downcase %}
           {% if eyebrow_bg_raw == blank or eyebrow_bg_raw == 'transparent' or eyebrow_bg_raw contains 'rgba(0,0,0,0)' or eyebrow_bg_raw contains 'rgba(255,255,255,0)' %}
             {% assign eyebrow_text_color = computed_text_color %}
           {% else %}
             {% assign eyebrow_bg = section.settings.eyebrowbackground | remove: '#' | upcase %}
             {% assign hex_chars = 'ABCDEF' %}
             {% assign r_hex = eyebrow_bg | slice: 0, 2 %}
             {% assign g_hex = eyebrow_bg | slice: 2, 2 %}
             {% assign b_hex = eyebrow_bg | slice: 4, 2 %}
             {% assign r1 = r_hex | slice: 0, 1 %}
             {% assign r2 = r_hex | slice: 1, 1 %}
             {% if hex_chars contains r1 %}{% assign r1_val = hex_chars | split: '' | index: r1 | plus: 10 %}{% else %}{% assign r1_val = r1 | times: 1 %}{% endif %}
             {% if hex_chars contains r2 %}{% assign r2_val = hex_chars | split: '' | index: r2 | plus: 10 %}{% else %}{% assign r2_val = r2 | times: 1 %}{% endif %}
             {% assign r = r1_val | times: 16 | plus: r2_val %}
             {% assign g1 = g_hex | slice: 0, 1 %}
             {% assign g2 = g_hex | slice: 1, 1 %}
             {% if hex_chars contains g1 %}{% assign g1_val = hex_chars | split: '' | index: g1 | plus: 10 %}{% else %}{% assign g1_val = g1 | times: 1 %}{% endif %}
             {% if hex_chars contains g2 %}{% assign g2_val = hex_chars | split: '' | index: g2 | plus: 10 %}{% else %}{% assign g2_val = g2 | times: 1 %}{% endif %}
             {% assign g = g1_val | times: 16 | plus: g2_val %}
             {% assign b1 = b_hex | slice: 0, 1 %}
             {% assign b2 = b_hex | slice: 1, 1 %}
             {% if hex_chars contains b1 %}{% assign b1_val = hex_chars | split: '' | index: b1 | plus: 10 %}{% else %}{% assign b1_val = b1 | times: 1 %}{% endif %}
             {% if hex_chars contains b2 %}{% assign b2_val = hex_chars | split: '' | index: b2 | plus: 10 %}{% else %}{% assign b2_val = b2 | times: 1 %}{% endif %}
             {% assign b = b1_val | times: 16 | plus: b2_val %}
             {% assign eyebrow_brightness = r | times: 299 | plus: g | times: 587 | plus: b | times: 114 | divided_by: 1000 %}
             {% if eyebrow_brightness > 128 %}
               {% assign eyebrow_text_color = '#000000' %}
             {% else %}
               {% assign eyebrow_text_color = '#ffffff' %}
             {% endif %}
           {% endif %}
           <div style="max-width: fit-content; display: flex; align-items: center; margin-bottom: 20px; background-color: {{ section.settings.eyebrowbackground }}; border-radius: {{ section.settings.border_radius }}px; padding: 8px 8px; border: {{section.settings.border_width_general}}px solid {{section.settings.eyebrowbordercolor}};">
              <div style="font-size: {{ section.settings.accent_text_size }}px; color: {{ eyebrow_text_color }};line-height:1.2;display: flex;flex-direction:row;align-items: center;gap:10px;font-weight:400;{% if section.settings.uppercase_accent_text %}text-transform:uppercase;{% endif %}">
                {% if metaobject['cc-creator-profile-picture'] %}
                  <div
                    style="
                      border-radius: 100%;
                      height: 32px;
                      width: 32px;
                      overflow: hidden;
                      display: flex;
                      justify-content: center;
                      align-items: center;
                    "
                  >
                    <img
                      src="{{ metaobject.cc-creator-profile-picture }}"
                      alt="Creator Profile"
                      style="height: 100%; width: 100%; object-fit: cover;"
                    >
                  </div>
                {% endif %}
                <div style="{% if section.settings.eyebrow_set_uppercase %}text-transform:uppercase;{% endif %}">
                {{- eyebrowcopy -}}
                </div>
              </div>
            </div>
       {% endif %}
   
            {% if title != blank %}
              {%- assign move_header_mobile = true -%}
              <div class="{% if move_header_mobile and total_media_count > 0 %}hide-on-mobile{% endif %}">
                    <div class="hero-header-copy hide-on-mobile dynamic-text" style="font-weight:500 !important; margin-bottom: 20px;">
                      {{ title }}
                    </div>
                
                    <div
                      class="hero-header-copy hide-on-desktop dynamic-text"
                      style="text-align: center; font-weight:500; margin-bottom: 20px;"
                    >
                      {{ title }}
                    </div>
                </div>
              {% endif %}

               {% if stars != blank %}
                  <div style="display: flex; flex-direction: row; align-items: center; margin-top:5px; margin-bottom: 25px;">
                    <div id="star-container">
                      {% for i in (1..5) %}
                        <svg class="star hero-star-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" style="width: 14px; height: 14px;">
                          <path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z"/>
                        </svg>
                      {% endfor %}
                    </div>
                    <p id="star-text" class="dynamic-text" style="font-size: {{ section.settings.accent_text_size }}px; line-height: 1;font-weight:600;{% if section.settings.uppercase_accent_text %}text-transform:uppercase;{% endif %}">{{ stars }}</p>
                  </div>
               {% endif %}

               {% if subtitle != blank %}
                   <p class="dynamic-text" style="line-height: 1.4; max-width:650px; margin-top:0; margin-bottom: 40px;">
                  {{ subtitle }}
                </p>   
                  {% endif %}

            {% if section.settings.collab_highlight_display != 'no' %}
                {% assign cc_handle = cart.attributes['cc-creator-handle'] %}
                {% assign cc_creator = metaobjects.creator[cc_handle] %}
                {% assign brand_logo = metaobject.data.value['cc-channel-brandkit-primary-logo'] %}
                {% assign brand_title = metaobject.data.value['cc-channel-brandkit-title'] %}

                    <div class="cc-logo-container cc-collab-highlight" style="margin-bottom: 40px;">
                    {% if brand_logo %}
                      <div class="cc-logo">
                        <img
                          src="{{ brand_logo }}"
                          alt="{{ brand_title | default: shop.name | escape }}"
                          loading="lazy"
                          class="cc-logo-image"
                        >
                      <p class="cc-logo-text dynamic-text" style="{% if section.settings.uppercase_accent_text %}text-transform:uppercase;{% endif %} font-size: {{ section.settings.accent_text_size }}px; line-height: 1.2; text-align:center; margin: 0 auto; margin-top: 10px;font-weight:400;">
                        {{ brand_title }}
                        </p>
                        </div>
                    {% else %}
                      <div class="cc-logo">
                        <span class="h2">{{ shop.name }}</span>
                      </div>
                    {% endif %}

                    {% assign first_name = metaobject['cc-creator-first-name'] | default: '' %}
                    {% assign last_name = metaobject['cc-creator-last-name'] | default: '' %}
                    {% assign first_initial = first_name | slice: 0, 1 | upcase %}
                    {% assign last_initial = last_name | slice: 0, 1 | upcase %}
                    {% assign initials = first_initial | append: last_initial %}
                    {% assign fallback_bg = metaobject.data.value['cc-channel-brandkit-primary-color'] | default: '#cccccc' %}
                    
                    
                    {% assign bg_color = fallback_bg | remove: '#' | upcase %}
                    
                    
                    {% assign hex_chars = 'ABCDEF' %}
                    {% assign r_hex = bg_color | slice: 0, 2 %}
                    {% assign g_hex = bg_color | slice: 2, 2 %}
                    {% assign b_hex = bg_color | slice: 4, 2 %}
                    
                    
                    {% assign r1 = r_hex | slice: 0, 1 %}
                    {% assign r2 = r_hex | slice: 1, 1 %}
                    {% if hex_chars contains r1 %}{% assign r1_val = hex_chars | split: '' | index: r1 | plus: 10 %}{% else %}{% assign r1_val = r1 | times: 1 %}{% endif %}
                    {% if hex_chars contains r2 %}{% assign r2_val = hex_chars | split: '' | index: r2 | plus: 10 %}{% else %}{% assign r2_val = r2 | times: 1 %}{% endif %}
                    {% assign r = r1_val | times: 16 | plus: r2_val %}
                    
                    
                    {% assign g1 = g_hex | slice: 0, 1 %}
                    {% assign g2 = g_hex | slice: 1, 1 %}
                    {% if hex_chars contains g1 %}{% assign g1_val = hex_chars | split: '' | index: g1 | plus: 10 %}{% else %}{% assign g1_val = g1 | times: 1 %}{% endif %}
                    {% if hex_chars contains g2 %}{% assign g2_val = hex_chars | split: '' | index: g2 | plus: 10 %}{% else %}{% assign g2_val = g2 | times: 1 %}{% endif %}
                    {% assign g = g1_val | times: 16 | plus: g2_val %}
                    
                    
                    {% assign b1 = b_hex | slice: 0, 1 %}
                    {% assign b2 = b_hex | slice: 1, 1 %}
                    {% if hex_chars contains b1 %}{% assign b1_val = hex_chars | split: '' | index: b1 | plus: 10 %}{% else %}{% assign b1_val = b1 | times: 1 %}{% endif %}
                    {% if hex_chars contains b2 %}{% assign b2_val = hex_chars | split: '' | index: b2 | plus: 10 %}{% else %}{% assign b2_val = b2 | times: 1 %}{% endif %}
                    {% assign b = b1_val | times: 16 | plus: b2_val %}
                    
                    
                    {% assign brightness = r | times: 299 | plus: g | times: 587 | plus: b | times: 114 | divided_by: 1000 %}
                    {% if brightness > 128 %}
                      {% assign initials_color = '#000000' %}
                    {% else %}
                      {% assign initials_color = '#ffffff' %}
                    {% endif %}

                    {% if metaobject['cc-creator-profile-picture'] %}
                      <span class="cc-logo-divider cc-divider">×</span>
                      <div class="cc-creator">
                        <img
                          src="{{ metaobject.cc-creator-profile-picture }}"
                          alt="{{ first_name  | default: 'Creator' | escape }}"
                          loading="lazy"
                          class="cc-creator-image"
                        >
                      <p class="cc-creator-name dynamic-text" style="{% if section.settings.uppercase_accent_text %}text-transform:uppercase;{% endif %} font-size: {{ section.settings.accent_text_size }}px; line-height: 1.2; text-align:center; margin: 0 auto; margin-top: 10px;font-weight:400;">{% if section.settings.collab_highlight_display == 'shop_title' %}{{ metaobject.cc-creator-shop-title | default: metaobject.cc-creator-first-name }}{% else %}{{ metaobject.cc-creator-first-name }}{% endif %}</p>
                      </div>

                      {% else %}

                      <span class="cc-logo-divider cc-divider">×</span>
                       <div class="cc-creator-profile" style="align-self:start; text-align: center; height:100%;">
                      <div class="cc-creator-image cc-creator-initials" style="
                        background-color: {{ fallback_bg }};
                        border-radius: 50%;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        margin: 0 auto;
                      ">
                        <h4 class="cc-initials-text" style="
                          color: {{ initials_color }};
                          font-size: 24px;
                          font-weight: bold;
                          text-transform: uppercase;
                          margin: 0;
                        ">{{ initials }}</h4>
                      </div>
                      <p class="cc-creator-name dynamic-text" style="{% if section.settings.uppercase_accent_text %}text-transform:uppercase;{% endif %} font-size: {{ section.settings.accent_text_size }}px; line-height: 1.2; text-align:center; margin: 0 auto; margin-top: 10px;font-weight:400;">{% if section.settings.collab_highlight_display == 'shop_title' %}{{ metaobject.cc-creator-shop-title | default: first_name }}{% else %}{{ first_name }}{% endif %}</p>
                    </div>
                    {% endif %}
                  </div>
            {% endif %}

                {% if cta_text != blank %}
                  
                  {% assign cta_bg_raw = section.settings.cta_background | downcase %}
                  {% if cta_bg_raw == blank or cta_bg_raw == 'transparent' or cta_bg_raw contains 'rgba(0,0,0,0)' or cta_bg_raw contains 'rgba(255,255,255,0)' %}
                    {% assign cta_text_color = computed_text_color %}
                  {% else %}
                    {% assign cta_bg = section.settings.cta_background | remove: '#' | upcase %}
                    {% assign hex_chars = 'ABCDEF' %}
                    {% assign r_hex = cta_bg | slice: 0, 2 %}
                    {% assign g_hex = cta_bg | slice: 2, 2 %}
                    {% assign b_hex = cta_bg | slice: 4, 2 %}
                    {% assign r1 = r_hex | slice: 0, 1 %}
                    {% assign r2 = r_hex | slice: 1, 1 %}
                    {% if hex_chars contains r1 %}{% assign r1_val = hex_chars | split: '' | index: r1 | plus: 10 %}{% else %}{% assign r1_val = r1 | times: 1 %}{% endif %}
                    {% if hex_chars contains r2 %}{% assign r2_val = hex_chars | split: '' | index: r2 | plus: 10 %}{% else %}{% assign r2_val = r2 | times: 1 %}{% endif %}
                    {% assign r = r1_val | times: 16 | plus: r2_val %}
                    {% assign g1 = g_hex | slice: 0, 1 %}
                    {% assign g2 = g_hex | slice: 1, 1 %}
                    {% if hex_chars contains g1 %}{% assign g1_val = hex_chars | split: '' | index: g1 | plus: 10 %}{% else %}{% assign g1_val = g1 | times: 1 %}{% endif %}
                    {% if hex_chars contains g2 %}{% assign g2_val = hex_chars | split: '' | index: g2 | plus: 10 %}{% else %}{% assign g2_val = g2 | times: 1 %}{% endif %}
                    {% assign g = g1_val | times: 16 | plus: g2_val %}
                    {% assign b1 = b_hex | slice: 0, 1 %}
                    {% assign b2 = b_hex | slice: 1, 1 %}
                    {% if hex_chars contains b1 %}{% assign b1_val = hex_chars | split: '' | index: b1 | plus: 10 %}{% else %}{% assign b1_val = b1 | times: 1 %}{% endif %}
                    {% if hex_chars contains b2 %}{% assign b2_val = hex_chars | split: '' | index: b2 | plus: 10 %}{% else %}{% assign b2_val = b2 | times: 1 %}{% endif %}
                    {% assign b = b1_val | times: 16 | plus: b2_val %}
                    {% assign cta_brightness = r | times: 299 | plus: g | times: 587 | plus: b | times: 114 | divided_by: 1000 %}
                    {% if cta_brightness > 128 %}
                      {% assign cta_text_color = '#000000' %}
                    {% else %}
                      {% assign cta_text_color = '#ffffff' %}
                    {% endif %}
                  {% endif %}
                    <div style="margin-bottom: 0px;">
                      <a href="{{ section.settings.cta_url }}" style="text-decoration: none;">
                      <button type="button" class="button{% if section.settings.override_theme_button %} fallback-cta hero-cta-button{% endif %}" {% if section.settings.override_theme_button %}style="background-color: {{section.settings.cta_background}}; color: {{ cta_text_color }}; padding: 24px 42px; text-align: center; line-height: 1.2; cursor: pointer; border-radius: {{ section.settings.border_radius }}px; {% if section.settings.uppercase_accent_text %}text-transform:uppercase;{% endif %}"{% endif %}>
                          <p>{{ cta_text }}</p>
                        </button>
                      </a>
                    </div>
                  {% endif %}

    </div>
  </div>
    <!-- Left/Bottom Panel (Now Second) -->
     {% if total_media_count > 0 %}
    <div id="hero-image" class="slider--{{ section.settings.carousel_type }}">
          {%- assign move_header_mobile = true -%}

      {% if move_header_mobile and title != blank %}
          <div class="mobile-header-top-wrapper hide-on-desktop" style="padding-bottom: {{ section.settings.padding_vertical }}rem;">
              <div
                class="hero-header-copy hide-on-mobile dynamic-text"
                style="font-weight: 500 !important; margin-bottom: 20px;"
              >
                {{ title }}
              </div>
        
              <div
                class="hero-header-copy hide-on-desktop dynamic-text"
                style="text-align: center; font-weight: 500; margin-bottom: 0px;"
              >
                {{ title }}
              </div>
          </div>
          {% endif %}

 
      {% if section.settings.carousel_type == 'social' %}
      <div class="story">
        <div class="story__slider swiper">
          <div class="story__wrapper swiper-wrapper">

            {%- assign media_count = 0 -%}
            {% if creator_media_count == 0 %}
              {% if section.settings.video_1 != blank %}{%- assign media_count = media_count | plus: 1 -%}{% endif %}
            {% endif %}

            {%- assign has_ugc_videos = false -%}
           

              {%- assign counter = 0 -%}

              {%- assign first_video_found = false -%}
              
              {%- for drop in metaobject.data.value['cc-creator-drops'] -%}
                {%- for product in drop['cc-creator-drop-products'] -%}
                  {%- for media in product.enhancement.media -%}
                    {%- if media.url contains 'assets.drops.shop' -%}
                    {%- if media.mimeType contains 'video' and true -%}
                      {%- assign is_first_video = false -%}
                      {%- if first_video_found == false -%}
                        {%- assign is_first_video = true -%}
                        {%- assign first_video_found = true -%}
                      {%- endif -%}
                      <div class="story__slide swiper-slide">
                        <div class="unique-testimonial__image media-wrapper media-wrapper--small" tabindex="0">
                          <video muted playsinline loop style="height:100%;width:100%;object-fit: cover;object-position: center;">
                            <source src="{{ media.url }}" type="video/mp4">
                          </video>
                          <div class="pause-icon">
                            <svg
                                  width="50"
                                  height="50"
                                  viewBox="0 0 24 24"
                                  fill="white"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <rect x="6" y="5" width="4" height="14" fill="currentColor"/>
                                  <rect x="14" y="5" width="4" height="14" fill="currentColor"/>
                                </svg>
                          </div>
                          <div class="play-icon">
                             <svg
                                  width="50"
                                  height="50"
                                  viewBox="0 0 24 24"
                                  fill="white"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <polygon points="8,5 19,12 8,19" fill="currentColor"/>
                                </svg>
                          </div>
                          <button class="mute-toggle"
                          style="
                                  position: absolute;
                                  bottom: 10px;
                                  right: 10px;
                                  z-index: 10;
                                  padding: 6px 10px;
                                  background: rgba(0,0,0,0.5);
                                  color: white;
                                  border: none;
                                  border-radius: 16px;
                                  cursor: pointer;
                                "
                              >🔇</button>
                        </div>
                      </div>
                      {%- assign has_ugc_videos = true -%}
                    {%- elsif media.mimeType contains 'image' and true -%}
                      <div class="story__slide swiper-slide">
                        <div class="unique-testimonial__image media-wrapper media-wrapper--small" tabindex="0">
                          <img src="{{ media.url }}" style="height:100%;width:100%;object-fit: cover;object-position: center;">
                        </div>
                      </div>
                      {%- assign has_ugc_videos = true -%}
                    {%- endif -%}
                    {%- endif -%}
                  {%- endfor -%}
                  
                  
                  {%- for field in product -%}
                    {%- assign field_value = field[1] -%}
                    {%- if field_value.first -%}
                      {%- for item in field_value -%}
                        {%- if item.url contains 'assets.drops.shop' -%}
                          {%- if item.mimeType contains 'video' and true -%}
                            {%- assign is_first_video = false -%}
                            {%- if first_video_found == false -%}
                              {%- assign is_first_video = true -%}
                              {%- assign first_video_found = true -%}
                            {%- endif -%}
                            <div class="story__slide swiper-slide">
                              <div class="unique-testimonial__image media-wrapper media-wrapper--small" tabindex="0">
                                <video muted playsinline loop style="height:100%;width:100%;object-fit: cover;object-position: center;">
                                  <source src="{{ item.url }}" type="video/mp4">
                                </video>
                                <div class="pause-icon">
                                  <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                    <rect x="6" y="5" width="4" height="14" fill="currentColor"/>
                                    <rect x="14" y="5" width="4" height="14" fill="currentColor"/>
                                  </svg>
                                </div>
                                <div class="play-icon">
                                  <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                    <polygon points="8,5 19,12 8,19" fill="currentColor"/>
                                  </svg>
                                </div>
                                <button class="mute-toggle" style="position: absolute; bottom: 10px; right: 10px; z-index: 10; padding: 6px 10px; background: rgba(0,0,0,0.5); color: white; border: none; border-radius: 16px; cursor: pointer;">🔇</button>
                              </div>
                            </div>
                            {%- assign has_ugc_videos = true -%}
                          {%- elsif item.mimeType contains 'image' and true -%}
                            <div class="story__slide swiper-slide">
                              <div class="unique-testimonial__image media-wrapper media-wrapper--small" tabindex="0">
                                <img src="{{ item.url }}" style="height:100%;width:100%;object-fit: cover;object-position: center;">
                              </div>
                            </div>
                            {%- assign has_ugc_videos = true -%}
                          {%- endif -%}
                        {%- endif -%}
                      {%- endfor -%}
                    {%- endif -%}
                {%- endfor -%}
              {%- endfor -%}

                
                {%- for field in drop -%}
                  {%- assign field_value = field[1] -%}
                  {%- if field_value.first -%}
                    {%- for item in field_value -%}
                      {%- if item.url contains 'assets.drops.shop' -%}
                        {%- if item.mimeType contains 'video' and true -%}
                          {%- assign is_first_video = false -%}
                          {%- if first_video_found == false -%}
                            {%- assign is_first_video = true -%}
                            {%- assign first_video_found = true -%}
                          {%- endif -%}
                          <div class="story__slide swiper-slide">
                            <div class="unique-testimonial__image media-wrapper media-wrapper--small" tabindex="0">
                              <video muted playsinline loop style="height:100%;width:100%;object-fit: cover;object-position: center;">
                                <source src="{{ item.url }}" type="video/mp4">
                              </video>
                              <div class="pause-icon">
                                <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                  <rect x="6" y="5" width="4" height="14" fill="currentColor"/>
                                  <rect x="14" y="5" width="4" height="14" fill="currentColor"/>
                                </svg>
                          </div>
                              <div class="play-icon">
                                <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                  <polygon points="8,5 19,12 8,19" fill="currentColor"/>
                                </svg>
                        </div>
                              <button class="mute-toggle" style="position: absolute; bottom: 10px; right: 10px; z-index: 10; padding: 6px 10px; background: rgba(0,0,0,0.5); color: white; border: none; border-radius: 16px; cursor: pointer;">🔇</button>
                            </div>
                          </div>
                          {%- assign has_ugc_videos = true -%}
                        {%- elsif item.mimeType contains 'image' and true -%}
                          <div class="story__slide swiper-slide">
                            <div class="unique-testimonial__image media-wrapper media-wrapper--small" tabindex="0">
                              <img src="{{ item.url }}" style="height:100%;width:100%;object-fit: cover;object-position: center;">
                            </div>
                          </div>
                          {%- assign has_ugc_videos = true -%}
                        {%- endif -%}
                      {%- endif -%}
                    {%- endfor -%}
                  {%- endif -%}
                {%- endfor -%}
              {%- endfor -%}
              
              
              {%- for field in metaobject.data.value -%}
                {%- assign field_value = field[1] -%}
                {%- if field_value.first -%}
                  {%- for item in field_value -%}
                    {%- if item.url contains 'assets.drops.shop' -%}
                      {%- if item.mimeType contains 'video' and true -%}
                        {%- assign is_first_video = false -%}
                        {%- if first_video_found == false -%}
                          {%- assign is_first_video = true -%}
                          {%- assign first_video_found = true -%}
                        {%- endif -%}
                        <div class="story__slide swiper-slide">
                          <div class="unique-testimonial__image media-wrapper media-wrapper--small" tabindex="0">
                            <video muted playsinline loop style="height:100%;width:100%;object-fit: cover;object-position: center;">
                              <source src="{{ item.url }}" type="video/mp4">
                            </video>
                            <div class="pause-icon">
                              <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                  <rect x="6" y="5" width="4" height="14" fill="currentColor"/>
                                  <rect x="14" y="5" width="4" height="14" fill="currentColor"/>
                              </svg>
                      </div>
                              <div class="play-icon">
                                <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                  <polygon points="8,5 19,12 8,19" fill="currentColor"/>
                                </svg>
                              </div>
                            <button class="mute-toggle" style="position: absolute; bottom: 10px; right: 10px; z-index: 10; padding: 6px 10px; background: rgba(0,0,0,0.5); color: white; border: none; border-radius: 16px; cursor: pointer;">🔇</button>
                          </div>
                        </div>
                        {%- assign has_ugc_videos = true -%}
                      {%- elsif item.mimeType contains 'image' and true -%}
                        <div class="story__slide swiper-slide">
                      <div class="unique-testimonial__image media-wrapper media-wrapper--small" tabindex="0">
                            <img src="{{ item.url }}" style="height:100%;width:100%;object-fit: cover;object-position: center;">
                      </div>
                  </div>
                        {%- assign has_ugc_videos = true -%}
                      {%- endif -%}
                    {%- endif -%}
                  {%- endfor -%}
                {%- endif -%}
              {%- endfor -%}

              
              {%- if creator_media_count == 0 and section.settings.video_1 != blank -%}
                {%- assign is_first_section_video = true -%}
                <div class="story__slide swiper-slide">
                  <div class="unique-testimonial__image media-wrapper media-wrapper--small playing" tabindex="0">
                    {{ section.settings.video_1 | video_tag: image_size: '1080x', autoplay: true, muted: true, loop: true, playsinline: true, controls: false, class: 'autoplay-first' }}
                    <div class="play-icon first-video">
                       <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                  <polygon points="8,5 19,12 8,19" fill="currentColor"/>
                                </svg>
                        </div>
                    <div class="pause-icon first-video">
                      <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                  <rect x="6" y="5" width="4" height="14" fill="currentColor"/>
                                  <rect x="14" y="5" width="4" height="14" fill="currentColor"/>
                        </svg>
                      </div>
                    <button class="mute-toggle" style="position: absolute; bottom: 10px; right: 10px; z-index: 10; padding: 6px 10px; background: rgba(0,0,0,0.5); color: white; border: none; border-radius: 16px; cursor: pointer;">🔇</button>
                  </div>
                  </div>
                {%- endif -%}

           
          </div>

          <!-- Swiper Controls -->
          <div class="story__next swiper-button-next"></div>
          <div class="story__prev swiper-button-prev"></div>
          <div class="story__pagination swiper-pagination"></div>

        </div>
      </div>

                
        {% else %}
      <!-- Video Slider -->
      <div class="unique-video-slider">
        <div class="unique-testimonials">
            {%- assign inline_media_count = 0 -%}
            {% if creator_media_count == 0 %}
              {% if section.settings.video_1 != blank %}{%- assign inline_media_count = inline_media_count | plus: 1 -%}{% endif %}
            {% endif %}

          {%- assign has_ugc_videos = false -%}
         
            {% assign counter = 0 %}
            <testimonials-component
              data-slider="{% if inline_media_count > 1 %}true{% else %}false{% endif %}"
              data-autorotate="{{ section.settings.autorotate }}"
              data-autorotate-speed="{{ section.settings.autorotate_speed | times: 1000 }}"
              style="--block-count: {{ inline_media_count | minus: 1 }};"
            >
              <div class="unique-testimonial__list-wrapper">
                <div class="unique-video-slider-list" id="Testimonials">
               
                  {%- assign first_video_found_list = false -%}
                  {%- assign displayed_media_urls = '' -%}
                  {%- assign single_media_displayed = false -%}
                  
                  {%- unless total_media_count == 1 and creator_media_count == 0 -%}
                  
                  {%- for drop in metaobject.data.value['cc-creator-drops'] -%}
                    {%- for product in drop['cc-creator-drop-products'] -%}
                      {%- for media in product.enhancement.media -%}
                        {%- if media.url contains 'assets.drops.shop' -%}
                        {% unless displayed_media_urls contains media.url %}
                        {% unless total_media_count == 1 and single_media_displayed %}
                        {% if media.mimeType and media.mimeType contains 'video' and true %}
                          {%- assign is_first_video_list = false -%}
                          {%- if first_video_found_list == false -%}
                            {%- assign is_first_video_list = true -%}
                            {%- assign first_video_found_list = true -%}
                          {%- endif -%}
                          <div class="unique-video-slider-item{% if total_media_count == 1 %} single-media-item{% endif %}" style="{% if total_media_count == 1 %}margin: 0 auto;{% endif %}">
                            <div
                              class="unique-testimonial__image media-wrapper media-wrapper--small{% if is_first_video_list %} playing{% endif %}
                        tabindex="0"
                            >
                              <video
                              {% if is_first_video_list %}
                                  autoplay
                                  class="autoplay-first" 
                                {% endif %}
                                muted
                                playsinline
                                loop
                                style="height:100%;width:100%;object-fit: cover;object-position: center;"
                              >
                                <source src="{{ media.url }}" type="video/mp4">
                              </video>
                              <div class="pause-icon{% if is_first_video_list %} first-video{% endif %}">
                                <svg
                                  width="50"
                                  height="50"
                                  viewBox="0 0 24 24"
                                  fill="white"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <rect x="6" y="5" width="4" height="14" fill="currentColor"/>
                                  <rect x="14" y="5" width="4" height="14" fill="currentColor"/>
                                </svg>
                              </div>
                          <div class="play-icon{% if is_first_video_list %} first-video{% endif %}">
                                <svg
                                  width="50"
                                  height="50"
                                  viewBox="0 0 24 24"
                                  fill="white"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <polygon points="8,5 19,12 8,19" fill="currentColor"/>
                                </svg>
                              </div>
                              <button
                                class="mute-toggle"
                                style="
                                  position: absolute;
                                  bottom: 10px;
                                  right: 10px;
                                  z-index: 10;
                                  padding: 6px 10px;
                                  background: rgba(0,0,0,0.5);
                                  color: white;
                                  border: none;
                                  border-radius: 16px;
                                  cursor: pointer;
                                "
                              >
                                🔇
                              </button>
                              {%- assign has_ugc_videos = true -%}
                              {%- assign displayed_media_urls = displayed_media_urls | append: media.url | append: ',' -%}
                              {%- if total_media_count == 1 -%}
                                {%- assign single_media_displayed = true -%}
                              {%- endif -%}
                            </div>
                          </div>
                         {% elsif media.mimeType and media.mimeType contains 'image' and true %}
                          <div class="unique-video-slider-item{% if total_media_count == 1 %} single-media-item{% endif %}" style="{% if total_media_count == 1 %}margin: 0 auto;{% endif %}">
                            <div
                              class="unique-testimonial__image media-wrapper media-wrapper--small
                          tabindex="0"
                            >
                            <img
                            src="{{ media.url }}"
                            style="height:100%;width:100%;object-fit: cover;object-position: center;"
                          >
                                    {%- assign has_ugc_videos = true -%}
                                    {%- assign displayed_media_urls = displayed_media_urls | append: media.url | append: ',' -%}
                                    {%- if total_media_count == 1 -%}
                                      {%- assign single_media_displayed = true -%}
                                    {%- endif -%}
                                     </div>
                          </div>
                        {%- endif -%}
                        {%- endunless -%}
                        {%- endunless -%}
                        {%- endif -%}
                      {%- endfor -%}
                      
                      
                      {%- for field in product -%}
                        {%- assign field_value = field[1] -%}
                        {%- if field_value.first -%}
                          {%- for item in field_value -%}
                            {%- if item.url contains 'assets.drops.shop' -%}
                              {% unless displayed_media_urls contains item.url %}
                              {% unless total_media_count == 1 and single_media_displayed %}
                              {% if item.mimeType and item.mimeType contains 'video' and true %}
                                {%- assign is_first_video_list = false -%}
                                {%- if first_video_found_list == false -%}
                                  {%- assign is_first_video_list = true -%}
                                  {%- assign first_video_found_list = true -%}
                                {%- endif -%}
                                <div class="unique-video-slider-item{% if total_media_count == 1 %} single-media-item{% endif %}" style="{% if total_media_count == 1 %}margin: 0 auto;{% endif %}">
                                  <div class="unique-testimonial__image media-wrapper media-wrapper--small{% if is_first_video_list %} playing{% endif %}" tabindex="0">
                                    <video {% if is_first_video_list %} autoplay class="autoplay-first" {% endif %} muted playsinline loop style="height:100%;width:100%;object-fit: cover;object-position: center;">
                                      <source src="{{ item.url }}" type="video/mp4">
                                    </video>
                                    <div class="pause-icon{% if is_first_video_list %} first-video{% endif %}">
                                      <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                        <rect x="6" y="5" width="4" height="14" fill="currentColor"/>
                                        <rect x="14" y="5" width="4" height="14" fill="currentColor"/>
                                      </svg>
                                    </div>
                                    <div class="play-icon{% if is_first_video_list %} first-video{% endif %}">
                                      <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                        <polygon points="8,5 19,12 8,19" fill="currentColor"/>
                                      </svg>
                                    </div>
                                    <button class="mute-toggle" style="position: absolute; bottom: 10px; right: 10px; z-index: 10; padding: 6px 10px; background: rgba(0,0,0,0.5); color: white; border: none; border-radius: 16px; cursor: pointer;">🔇</button>
                                    {%- assign has_ugc_videos = true -%}
                                    {%- assign displayed_media_urls = displayed_media_urls | append: item.url | append: ',' -%}
                                    {%- if total_media_count == 1 -%}
                                      {%- assign single_media_displayed = true -%}
                                    {%- endif -%}
                                  </div>
                                </div>
                              {%- elsif item.mimeType and item.mimeType contains 'image' and true -%}
                                <div class="unique-video-slider-item{% if total_media_count == 1 %} single-media-item{% endif %}" style="{% if total_media_count == 1 %}margin: 0 auto;{% endif %}">
                                  <div class="unique-testimonial__image media-wrapper media-wrapper--small" tabindex="0">
                                    <img src="{{ item.url }}" style="height:100%;width:100%;object-fit: cover;object-position: center;">
                                    {%- assign has_ugc_videos = true -%}
                                    {%- assign displayed_media_urls = displayed_media_urls | append: item.url | append: ',' -%}
                                    {%- if total_media_count == 1 -%}
                                      {%- assign single_media_displayed = true -%}
                                    {%- endif -%}
                                  </div>
                                </div>
                              {%- endif -%}
                  {%- endunless -%}
                              {%- endunless -%}
                            {%- endif -%}
                          {%- endfor -%}
                        {%- endif -%}
                      {%- endfor -%}
                    {%- endfor -%}
                    
                    
                    {%- for field in drop -%}
                      {%- assign field_value = field[1] -%}
                      {%- if field_value.first -%}
                        {%- for item in field_value -%}
                          {%- if item.url contains 'assets.drops.shop' -%}
                            {% unless displayed_media_urls contains item.url %}
                            {% unless total_media_count == 1 and single_media_displayed %}
                            {% if item.mimeType and item.mimeType contains 'video' and true %}
                              {%- assign is_first_video_list = false -%}
                              {%- if first_video_found_list == false -%}
                                {%- assign is_first_video_list = true -%}
                                {%- assign first_video_found_list = true -%}
                              {%- endif -%}
                              <div class="unique-video-slider-item{% if total_media_count == 1 %} single-media-item{% endif %}" style="{% if total_media_count == 1 %}margin: 0 auto;{% endif %}">
                                <div class="unique-testimonial__image media-wrapper media-wrapper--small{% if is_first_video_list %} playing{% endif %}" tabindex="0">
                                  <video {% if is_first_video_list %} autoplay class="autoplay-first" {% endif %} muted playsinline loop style="height:100%;width:100%;object-fit: cover;object-position: center;">
                                    <source src="{{ item.url }}" type="video/mp4">
                                  </video>
                                  <div class="pause-icon{% if is_first_video_list %} first-video{% endif %}">
                                    <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                      <rect x="6" y="5" width="4" height="14" fill="currentColor"/>
                                      <rect x="14" y="5" width="4" height="14" fill="currentColor"/>
                                    </svg>
                                  </div>
                                  <div class="play-icon{% if is_first_video_list %} first-video{% endif %}">
                                    <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                      <polygon points="8,5 19,12 8,19" fill="currentColor"/>
                                    </svg>
                                  </div>
                                  <button class="mute-toggle" style="position: absolute; bottom: 10px; right: 10px; z-index: 10; padding: 6px 10px; background: rgba(0,0,0,0.5); color: white; border: none; border-radius: 16px; cursor: pointer;">🔇</button>
                                  {%- assign has_ugc_videos = true -%}
                                  {%- assign displayed_media_urls = displayed_media_urls | append: item.url | append: ',' -%}
                                  {%- if total_media_count == 1 -%}
                                    {%- assign single_media_displayed = true -%}
                                  {%- endif -%}
                                </div>
                              </div>
                            {%- elsif item.mimeType and item.mimeType contains 'image' and true -%}
                              <div class="unique-video-slider-item{% if total_media_count == 1 %} single-media-item{% endif %}" style="{% if total_media_count == 1 %}margin: 0 auto;{% endif %}">
                                <div class="unique-testimonial__image media-wrapper media-wrapper--small" tabindex="0">
                                  <img src="{{ item.url }}" style="height:100%;width:100%;object-fit: cover;object-position: center;">
                                  {%- assign has_ugc_videos = true -%}
                                  {%- assign displayed_media_urls = displayed_media_urls | append: item.url | append: ',' -%}
                                  {%- if total_media_count == 1 -%}
                                    {%- assign single_media_displayed = true -%}
                                  {%- endif -%}
                                </div>
                              </div>
                            {%- endif -%}
                            {%- endunless -%}
                            {%- endunless -%}
                          {%- endif -%}
                        {%- endfor -%}
                      {%- endif -%}
                    {%- endfor -%}
                  {%- endfor -%}
                  
                  
                  {%- for field in metaobject.data.value -%}
                    {%- assign field_value = field[1] -%}
                    {%- if field_value.first -%}
                      {%- for item in field_value -%}
                        {%- if item.url contains 'assets.drops.shop' -%}
                          {% unless displayed_media_urls contains item.url %}
                          {% unless total_media_count == 1 and single_media_displayed %}
                          {% if item.mimeType and item.mimeType contains 'video' and true %}
                            {%- assign is_first_video_list = false -%}
                            {%- if first_video_found_list == false -%}
                              {%- assign is_first_video_list = true -%}
                              {%- assign first_video_found_list = true -%}
                            {%- endif -%}
                            <div class="unique-video-slider-item{% if total_media_count == 1 %} single-media-item{% endif %}" style="{% if total_media_count == 1 %}margin: 0 auto;{% endif %}">
                              <div class="unique-testimonial__image media-wrapper media-wrapper--small{% if is_first_video_list %} playing{% endif %}" tabindex="0">
                                <video {% if is_first_video_list %} autoplay class="autoplay-first" {% endif %} muted playsinline loop style="height:100%;width:100%;object-fit: cover;object-position: center;">
                                  <source src="{{ item.url }}" type="video/mp4">
                                </video>
                                <div class="pause-icon{% if is_first_video_list %} first-video{% endif %}">
                                  <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                    <rect x="6" y="5" width="4" height="14" fill="currentColor"/>
                                    <rect x="14" y="5" width="4" height="14" fill="currentColor"/>
                                  </svg>
                                </div>
                                <div class="play-icon{% if is_first_video_list %} first-video{% endif %}">
                                  <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                                    <polygon points="8,5 19,12 8,19" fill="currentColor"/>
                                  </svg>
                                </div>
                                <button class="mute-toggle" style="position: absolute; bottom: 10px; right: 10px; z-index: 10; padding: 6px 10px; background: rgba(0,0,0,0.5); color: white; border: none; border-radius: 16px; cursor: pointer;">🔇</button>
                                {%- assign has_ugc_videos = true -%}
                                {%- assign displayed_media_urls = displayed_media_urls | append: item.url | append: ',' -%}
                                {%- if total_media_count == 1 -%}
                                  {%- assign single_media_displayed = true -%}
                                {%- endif -%}
                              </div>
                            </div>
                          {%- elsif item.mimeType and item.mimeType contains 'image' and true -%}
                            <div class="unique-video-slider-item{% if total_media_count == 1 %} single-media-item{% endif %}" style="{% if total_media_count == 1 %}margin: 0 auto;{% endif %}">
                              <div class="unique-testimonial__image media-wrapper media-wrapper--small" tabindex="0">
                                <img src="{{ item.url }}" style="height:100%;width:100%;object-fit: cover;object-position: center;">
                                {%- assign has_ugc_videos = true -%}
                                {%- assign displayed_media_urls = displayed_media_urls | append: item.url | append: ',' -%}
                                {%- if total_media_count == 1 -%}
                                  {%- assign single_media_displayed = true -%}
                                {%- endif -%}
                              </div>
                            </div>
                          {%- endif -%}
                          {%- endunless -%}
                          {%- endunless -%}
                        {%- endif -%}
                      {%- endfor -%}
                    {%- endif -%}
                  {%- endfor -%}
                  {%- endunless -%}
                 

                  {%- unless total_media_count == 1 and creator_media_count > 0 -%}
                  
                  
                  {%- if creator_media_count == 0 and section.settings.video_1 != blank -%}
                    {%- assign is_first_inline_video = true -%}
                    <div class="unique-video-slider-item is-selected{% if total_media_count == 1 %} single-media-item{% endif %}" style="{% if total_media_count == 1 %}margin: 0 auto;{% elsif inline_media_count == 1 and has_ugc_videos == false %}margin-left:0;margin:auto{% endif %}">
                      <div class="unique-testimonial__image media-wrapper media-wrapper--small playing" tabindex="0">
                        {{ section.settings.video_1 | video_tag: image_size: '1080x', autoplay: true, muted: true, loop: true, playsinline: true, controls: false, class: 'autoplay-first' }}
                        <div class="play-icon first-video">
                          <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                              <polygon points="8,5 19,12 8,19" fill="currentColor"/>
                            </svg>
                          </div>
                        <div class="pause-icon first-video">
                          <svg width="50" height="50" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
                              <rect x="6" y="5" width="4" height="14" fill="currentColor"/>
                              <rect x="14" y="5" width="4" height="14" fill="currentColor"/>
                            </svg>
                          </div>
                        <button class="mute-toggle" style="position: absolute; bottom: 10px; right: 10px; z-index: 10; padding: 6px 10px; background: rgba(0,0,0,0.5); color: white; border: none; border-radius: 16px; cursor: pointer;">🔇</button>
                          {%- assign has_ugc_videos = true -%}
                        </div>
                      </div>
                      {% assign counter = counter | plus: 1 %}
                  {%- endif -%}
                  
                  
                  
                  {%- endunless -%}
                </div>
              </div>
            </testimonials-component>
          
        </div>
         {% unless total_media_count == 1 %}
         <button class="slider-arrow right-arrow">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-right"><title>Right</title><polyline points="9 18 15 12 9 6"></polyline></svg>
         </button>
         {% endunless %}
      </div>
      {% endif %}
      <!-- End of Video Slider -->
    </div>
    {% endif %}
</div>
<style>
  .unique-testimonial__image .play-icon,
  .unique-testimonial__image .pause-icon {
     position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: rgba(0, 0, 0, 0.6);
      border-radius: 50%;
      width: 60px;
      height: 60px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
  }
    .play-icon svg, .pause-icon svg {
        width: 40px;
        height: 40px;
        color: white;
    }
  
  .unique-testimonial__image .pause-icon {
    display: none;
  }
  
  .unique-testimonial__image .play-icon {
   display: flex;
  }
  
  
  .unique-testimonial__image.playing .play-icon {
    display: none;
  }
  
  .unique-testimonial__image.playing .pause-icon {
    display: none;
  }
  
  
  .unique-testimonial__image.playing:hover .pause-icon {
    display: flex !important;
  }
  
  
  .media-wrapper--small {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    border-radius: {{ section.settings.border_radius | at_most: 40 }}px;
    border: {{ section.settings.border_width_general }}px solid {{ section.settings.textcolor }};
  }
  
  
  .story__slide .media-wrapper--small {
    border: none;
  }
  
  .media-wrapper--small video,
  .media-wrapper--small img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }
  
  
  .story__slide .unique-testimonial__image {
    aspect-ratio: 9/14;
    width: 400px;
    
  }

  
  {% if section.settings.custom_css != blank %}
    {{ section.settings.custom_css }}
  {% endif %}
</style>

{% schema %}
{
  "name": "Hero - Primavera",
  "tag": "section",
  "class": "custom-section",
  "settings": [
     {
      "type": "header",
      "content": "The Primavera Hero Block",
      "info": "The Primavera Hero Block is your storefront's bold first impression—an immersive, co-branded canvas that fuses video, images, and creator content into one dynamic experience. It's built to grab attention, showcase credibility, and highlight your brand and collaborators in a way that feels both aspirational and authentic. With flexible layouts, trust badges, and rich carousels, this section transforms your hero area into a content-forward stage that drives conversions."
    },
     {
      "type": "header",
      "content": "Before Building",
      "info": "Make sure a page template exists for the Creator metaobject. Add this section to the Creator metaobject page template. You can use Dynamic Sources with any section/block input (select the icon to the top right of each input) to inject co-branded content without addition developement or code."
    },
    {
      "type": "header",
      "content": "For Testing",
      "info": "To test, preview the theme with the section (saves the preview cookie). Then click the creator's affiliate link—but first ensure that creator is in a live campaign redirecting to the page with this section. You should then see the co-branded context. Bonus tip: in App embeds on the left side of this screen, switch the CreatorCommerce SDK to ON."
    },
    {
      "type": "header",
      "content": "Content & Text",
      "info": "Configure all text elements, messaging, and content for your hero section"
    },
    {
      "type": "inline_richtext",
      "id": "eyebrowcopy",
      "label": "Creator Badge Text",
      "default": "Recommended by [cc-creator-first-name]",
      "info": "Text to display in the creator badge (leave empty to hide badge). Supports dynamic text: use [cc-creator-first-name] or other creator field names in brackets to auto-replace with creator data."
    },
    {
      "type": "richtext",
      "id": "title",
      "label": "Heading Text",
      "default": "<h1>Shop with a big massive leader like [cc-creator-first-name] for something cool</h1>",
      "info": "Main heading for the section. Supports dynamic text: use [cc-creator-first-name] or other creator field names in brackets to auto-replace with creator data."
    },
    {
      "type": "inline_richtext",
      "id": "subtitle",
      "label": "Description Text",
      "default": "Get a [cc-collab-discount-amount]% discount by shopping from my curated collections.",
      "info": "Description text below the heading. Supports dynamic text: use [cc-creator-first-name] or other creator field names in brackets to auto-replace with creator data."
    },
    {
      "type": "inline_richtext",
      "id": "stars",
      "label": "Trust Indicator Text",
      "default": "Trusted by 10,000 others",
      "info": "Text to show next to star rating (leave empty to hide trust indicators). Supports dynamic text: use [cc-creator-first-name] or other creator field names in brackets."
    },
    {
      "type": "inline_richtext",
      "id": "cta_text",
      "label": "Button Text",
      "default": "Shop Now",
      "info": "Leave empty to hide button. Supports dynamic text: use [cc-creator-first-name] or other creator field names in brackets to auto-replace with creator data."
    },
    {
      "type": "url",
      "id": "cta_url",
      "label": "Button URL",
      "info":"Use #drops-anchor to scroll down to a products section"
      },
      {
        "type": "select",
      "id": "collab_highlight_display",
      "label": "Show Collab Highlight",
      "default": "first_name",
      "info": "Display brand logo and creator name from metaobject data",
        "options": [
        {"label": "Using First Name", "value": "first_name"},
        {"label": "Using Shop Title", "value": "shop_title"},
        {"label": "No", "value": "no"}
      ]
    },
    {
      "type": "select",
      "id": "carousel_type",
      "label": "Carousel Display Type",
      "default": "inline",
      "info": "Choose how the carousel is displayed",
      "options": [
        {
          "value": "social",
          "label": "Social (Full-screen style)"
        },
        {
          "value": "inline",
          "label": "Inline (Side-by-side with content)"
        }
      ]
    },
    {
      "type": "video",
      "id": "video_1",
      "label": "Fallback Video",
      "info": "Upload a video file to display in the carousel. Creator media from drops will automatically be included if available."
    },
    {
      "type": "header",
      "content": "Design & Styling",
      "info": "Customize colors, typography, layout, spacing, and visual appearance"
    },
        {
      "type": "color",
      "id": "background",
      "label": "Background Color",
      "default":"#818181",
      "info": "Main background color for the section"
    },
    {
      "type":"image_picker",
      "id":"background_image",
      "label":"Background Image",
      "info": "Optional background image (will show behind content)"
    },
    {
      "type": "color",
      "id": "textcolor",
      "label": "Text Color",
      "default":"#ffffff",
      "info": "Controls all text color in the section (heading, description, trust indicators, and collaboration highlight text). Note: Initials automatically adjust to black or white based on contrast with the brand color."
    },
    {
      "type": "checkbox",
      "id": "auto_text_contrast",
      "label": "Auto-Adjust Text Contrast",
      "default": false,
      "info": "Automatically adjust text colors for best readability against background. Best used when setting creator color as background color. Not for use with background images."
    },
    {
      "type": "color",
      "id": "eyebrowbackground",
      "label": "Badge Background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "eyebrowbordercolor",
      "label": "Badge Border Color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "cta_background",
      "label": "Button Background",
      "default": "#000000"
    },
    {
      "type": "checkbox",
      "id": "override_theme_button",
      "label": "Override Theme Button Style",
      "default": true,
      "info": "When enabled, uses custom button styling. When disabled, inherits your theme's default button classes for consistent styling."
    },
    {
      "type": "range",
      "id": "border_width_general",
      "min": 0,
      "max": 5,
      "step": 1,
      "unit": "px",
      "label": "Border Width",
      "default": 0,
      "info": "Controls border width for buttons and badges"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Border Radius",
      "default": 8,
      "info": "Controls roundness of corners for creator badge, button, and media items (0 = square corners, 32 = very rounded)"
    },
    {
      "type": "range",
      "id": "padding_vertical",
      "min": 0,
      "max": 6,
      "step": 0.2,
      "unit": "rem",
      "label": "Vertical Padding (All Devices)",
      "default": 2.6,
      "info": "Top and bottom padding for the content container"
    },
    {
      "type": "range",
      "id": "accent_text_size",
      "min": 10,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Accent Text Size",
      "default": 13,
      "info": "Controls size for collaboration highlight names and trust indicator text"
    },
    {
      "type": "checkbox",
      "id": "uppercase_accent_text",
      "label": "Uppercase Accent Text",
      "default": false,
      "info": "Makes creator badge, collaboration highlight, trust indicator, and button text uppercase"
    },
    {
      "type": "range",
      "id": "star_adjustment_spacing",
      "min": -10,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Star Vertical Adjustment",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_left",
      "min": 0,
      "max": 200,
      "step": 4,
      "unit": "px",
      "label": "Left Padding (Desktop)",
      "default": 80,
      "info": "Left padding for the content container on desktop. Note: Automatically removed when section has no media and is centered."
    },
    {
      "type": "header",
      "content": "Advanced Settings",
      "info": "Preview functionality and custom styling options"
    },
    {
      "type": "textarea",
      "id": "custom_css",
      "label": "Custom CSS",
      "info": "Add custom CSS rules here. Example: .hero-content { padding: 20px; }"
    }
  ],
  "presets": [
    {
      "name": "Hero - Primavera"
    }
  ],
  "enabled_on": {
    "templates": ["metaobject"]
  }
}
{% endschema %}










<style>
    button.mute-toggle {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 45px;
        height: auto !important;
    }
      @media only screen and (min-width: 1101px) {
      .unique-video-slider {
        position: relative;
        overflow-x: hidden;
        width: 100%;
      }
  
      .unique-video-slider-item {
        flex: 0 0 auto;
        transition:
        opacity 0.3s ease-out,        
        transform 0.5s ease-out,       
        filter 0.5s ease-out;         
        opacity: 1;
        filter: blur(0);
        transform: scale(1) translateX(0);
        position: relative;
        z-index: 1;

      }

    .unique-video-slider-item.is-active {
        opacity: 1;
        filter: blur(0);
        z-index: 3;
    }

    .unique-video-slider-item.fade-out-left {
    opacity: 0;
      filter: blur(2px);
      transform: scale(0.8) translateX(-40px);
      pointer-events: none;
      z-index: 0;  
    }

    .unique-video-slider-item.fade-left {
      opacity: 0.3;
      filter: blur(3px);
      transform: scale(0.92) translateX(-20px);
      z-index: 0; 
    }

      .unique-video-slider-item.slide-forward {
        opacity: 1;
      filter: blur(0);
        transform: scale(1) translateX(20px);
        z-index: 2; 
      }
      .unique-video-slider-item.transitioning {
        transition: none;
      }
    }

      .slider-arrow {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      z-index: 10;
      background: rgba(0, 0, 0, 0.5);
      border: none;
      color: white;
      font-size: 14px;
      padding: 10px;
      cursor: pointer;
      border-radius: 50%;
      transition: background 0.3s ease;
    }
    .slider-arrow svg{
      width:20px;
      height:20px;
    }

    .slider-arrow:hover {
      background: rgba(0, 0, 0, 0.7);
    }

      .right-arrow {
      right: 10px;
      height:40px;
      z-index: 9999999999999999999999999999999999;
    }
</style>

<style>

.swiper {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  z-index: 1;
  display: block;
}

.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: flex;
  transition-property: transform;
  box-sizing: content-box;
}

.swiper-slide {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  transition-property: transform;
}

.story__slider {
  aspect-ratio: 9/14;
  width: 400px;
    max-width: 100%;
  height: auto;
  overflow: hidden;
  margin: 0 auto;
}

.story__slide {
  position: relative;
  border-radius: {{ section.settings.border_radius | at_most: 40 }}px;
  border: {{ section.settings.border_width_general }}px solid {{ section.settings.textcolor }};
  overflow: hidden;
}

.story__slide video,
.story__slide img {
  height: 100%;
  width: 100%;
  object-fit: cover;
  object-position: center;
}

  .story__pagination {
  bottom: unset !important;
  top: 8px !important;
  display: flex;
  padding: 0 4px;
}

.story__pagination .swiper-pagination-bullet {
  flex-grow: 1;
  border-radius: 100vh;
  height: 3px;
  margin: 0 2px !important;
  background-color: rgba(247, 247, 245, 0.4);
  opacity: 1;
  position: relative;
  overflow: hidden;
}

.story__pagination .swiper-pagination-bullet .swiper-pagination-progress {
  height: 100%;
  width: 0%;
  border-radius: 100vh;
  background-color: #f7f7f5;
  position: absolute;
  top: 0;
  left: 0;
}


@media screen and (max-width: 768px) {
  .story__slider {
      width: 100%;
    max-width: 350px;
    aspect-ratio: 9/14;
  }
  
  .slider--social {
    max-width: 100% !important;
    margin: 0 auto !important;
    padding: 0 16px;
  }

}

@media screen and (max-width: 480px) {
  .story__slider {
      width: 100%;
    max-width: 350px;
    aspect-ratio: 9/14;
  }


    .story {
       padding-left:20px;
    padding-right:20px;
  }
  
  .slider--social {
    padding: 0 12px;
  }
  

}

  .story__prev,
  .story__next {
  height: 100%;
  width: 50%;
  top: 0;
  margin-top: 0;
  position: absolute;
  z-index: 15;
}

  .story__prev::after,
  .story__next::after {
  content: none;
}

.story__prev {
  left: 0;
}

.story__next {
  right: 0;
}

</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<script src="https://unpkg.co/gsap@3/dist/gsap.min.js"></script>
<script src="https://pub-5ef10fe8b7fe493385209b25566c7cc7.r2.dev/hero-primavera-media.js" defer></script>


<style>

.swiper {
  margin-left: auto !important;
  margin-right: auto !important;
  position: relative !important;
  overflow: hidden !important;
  list-style: none !important;
  padding: 0 !important;
  z-index: 1 !important;
  display: block !important;
}

.swiper-wrapper {
  position: relative !important;
  width: 100% !important;
  height: 100% !important;
  z-index: 1 !important;
  display: flex !important;
  flex-wrap: nowrap !important;
  transition-property: transform !important;
  box-sizing: content-box !important;
}

.swiper-slide {
  flex-shrink: 0 !important;
  width: 100% !important;
  height: 100% !important;
  position: relative !important;
  transition-property: transform !important;
  display: block !important;
}


.story {
  width: 100% !important;
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
  position: relative !important;
}

.story__slider {
  aspect-ratio: 9/14 !important;
  width: 400px !important;
    max-width: 100% !important;
  height: auto !important;
  overflow: visible !important;
  margin: 0 auto !important;
  position: relative !important;
  padding: {{ section.settings.border_width_general }}px !important;
}

.story__wrapper {
  width: 100% !important;
  height: 100% !important;
  overflow: visible !important;
}

.story__slider .swiper-wrapper {
  display: flex !important;
  flex-wrap: nowrap !important;
  align-items: stretch !important;
  height: 100% !important;
  overflow: visible !important;
}

.story__slider .swiper-slide {
  flex-shrink: 0 !important;
  width: 100% !important;
  height: 100% !important;
  display: block !important;
  opacity: 0 !important;
  pointer-events: none !important;
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  transition: opacity 0.3s ease !important;
}

.story__slider .swiper-slide-active {
  opacity: 1 !important;
  pointer-events: auto !important;
  position: relative !important;
  z-index: 2 !important;
}

.story__slide {
  position: relative !important;
  border-radius: {{ section.settings.border_radius | at_most: 40 }}px !important;
  border: {{ section.settings.border_width }}px solid {{ section.settings.border_color }} !important;
  overflow: hidden !important;
  width: 100% !important;
  height: 100% !important;
  display: block !important;
  box-sizing: border-box !important;
  aspect-ratio: 9/14 !important;
}

.story__slide .unique-testimonial__image,
.story__slide .media-wrapper--small {
  width: 100% !important;
  height: 100% !important;
  display: block !important;
  border: none !important;
  border-radius: 0 !important;
}

.story__slide video,
.story__slide img {
  height: 100% !important;
  width: 100% !important;
  object-fit: cover !important;
  object-position: center !important;
  display: block !important;
}

  .story__pagination {
  bottom: unset !important;
  top: 8px !important;
  display: flex;
  padding: 0 4px;
}

.story__pagination .swiper-pagination-bullet {
  flex-grow: 1;
  border-radius: 100vh;
  height: 3px;
  margin: 0 2px !important;
  background-color: rgba(247, 247, 245, 0.4);
  opacity: 1;
  position: relative;
  overflow: hidden;
}

.story__pagination .swiper-pagination-bullet .swiper-pagination-progress {
  height: 100%;
  width: 0%;
  border-radius: 100vh;
  background-color: #f7f7f5;
  position: absolute;
  top: 0;
  left: 0;
}


@media screen and (max-width: 768px) {
  .story__slider {
      width: 100%;
    max-width: 250px;
    aspect-ratio: 9/14;
  }
  
  .slider--social {
    max-width: 100% !important;
    margin: 0 auto !important;
    padding: 0 16px;
  }
  
  .slider--social .story__slider {
    margin-left: 10px;
    margin-right: 10px;
  }
}

@media screen and (max-width: 480px) {
  .story__slider {
      width: 100%;
    max-width: 250px;
    aspect-ratio: 9/14;
  }
  
  .slider--social {
    padding: 0 12px;
  }
  
  .slider--social .story__slider {
    margin-left: 10px;
    margin-right: 10px;
  }
}

  .story__prev,
  .story__next {
  height: 100%;
  width: 50%;
  top: 0;
  margin-top: 0;
  position: absolute;
  z-index: 15;
}

  .story__prev::after,
  .story__next::after {
  content: none;
}

.story__prev {
  left: 0;
}

.story__next {
  right: 0;
}

</style>
